{"version":3,"sources":["component/header/header.js","component/if/if.js","component/form/form.js","component/reaults/results.js","component/history/history.js","component/footer/footer.js","App.js","index.js"],"names":["Header","to","React","Component","render","condition","children","If","props","Children","map","child","cloneElement","Then","Else","Form","handleSubmit","e","a","preventDefault","toggleLoading","url","method","target","reset","state","console","log","getHandler","putPost","deleteHandler","local","JSON","parse","localStorage","getItem","histArr","obj","push","setItem","stringify","setState","fetch","raw","json","data","headers","forEach","value","head","results","Headers","Response","request","update","alert","handleChangeBody","body","handleChangeURL","activation","active","handleChangeMethod","id","options","jsonData","history","onSubmit","this","name","type","onChange","className","onClick","placeholder","defaultValue","spellCheck","disabled","Results","response","loading","src","History","key","query","Footer","App","handleUpdate","updated","header","exact","path","Main","StrictMode","rootElement","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.59a5c4ee.chunk.js","sourcesContent":["import React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport './header.scss';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header>\n        <h1>RESTy</h1>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <NavLink to=\"/history\">history</NavLink>\n            </li>\n          </ul>\n        </nav>\n      </header>\n    );\n  }\n}\n\nexport default Header;","import React from 'react';\n\nconst render = (condition = false, children = null) => {\n  return condition ? children : null;\n};\nexport const If = (props) => {\n  return React.Children.map(props.children, (child) => {\n    return React.cloneElement(child, { condition: props.condition });\n  });\n};\n\nexport const Then = (props) => render(props.condition, props.children);\nexport const Else = (props) => render(!props.condition, props.children);","import React from 'react';\nimport { If, Then, Else } from '../if/if';\nimport './form.scss';\n\nclass Form extends React.Component {\n   \n  constructor(props) {\n    super(props);\n    this.state = {\n      url: '',\n      method: 'get',\n      request: {},\n      results:[],\n      history : [],\n      active:false,\n      body:'',\n    };\n    //   if(!JSON.parse(localStorage.getItem('history'))){\n    //     localStorage.setItem('history', JSON.stringify(this.history));\n    //   }\n      \n  }\n\n  handleSubmit = async e => {\n\n    e.preventDefault();\n    this.props.toggleLoading();\n    // e.target.reset();\n    try{\n      const url = '';\n      const method = '';\n      e.target.reset();\n      switch(this.state.method){\n      case 'get':\n        console.log('get');\n        await this.getHandler(e);\n        break;\n      case 'post':\n      case 'put':\n        console.log('post');\n        await this.putPost(e);\n        break;\n      case 'delete':\n        console.log('delete');\n        await this.deleteHandler(e);\n        break;\n      default:\n        await this.getHandler(e);\n      }\n      let local=JSON.parse(localStorage.getItem('history'));\n      //   console.log('looooooooocal',local);\n      if(local===null){\n        let histArr=[];\n        let obj={method:this.state.method, url:this.state.url};\n        histArr.push(obj);\n        localStorage.setItem('history', JSON.stringify(histArr));\n      }else{\n        let obj={method:this.state.method, url:this.state.url};\n        local.push(obj);\n        localStorage.setItem('history', JSON.stringify(local));\n  \n      }\n      this.props.toggleLoading();\n      this.setState({url, method});\n    }catch(err){\n      console.log(err);\n    }\n    \n    \n    \n  }\n\n  getHandler=async(e)=>{\n\n    if (this.state.url && this.state.method) {\n      let url = this.state.url;\n      let method = this.state.method ;\n  \n      const raw = await fetch(url);\n      const data = await raw.json();\n      let head ;\n      raw.headers.forEach(value =>{\n        head = { 'Content-Type': value };\n      });  \n      let results = {\n        Headers: head,\n        Response: data,\n      };  \n      let request = {\n        url: this.state.url,\n        method: this.state.method,\n      };\n      //   let local=JSON.parse(localStorage.getItem('history'));\n      //   console.log('looooooooocal',local);\n      //   if(local===null){\n      //     let histArr=[];\n      //     let obj={method:this.state.method, url:this.state.url};\n      //     histArr.push(obj);\n      //     localStorage.setItem('history', JSON.stringify(histArr));\n      //   }else{\n      //     let obj={method:this.state.method, url:this.state.url};\n      //     local.push(obj);\n      //     localStorage.setItem('history', JSON.stringify(local));\n  \n      //   }\n       \n      await this.setState({results, url, method,request});\n      //   //   this.history = JSON.parse(localStorage.getItem('history'))||[];\n      //   //   //   console.log('sssssssssssssssssssssss',url,method);\n      //   //   this.history.push({url, method});\n      //   //   localStorage.setItem('history', JSON.stringify(this.history));\n      //   url = await '';\n      //   method =await ''; \n      await this.props.update(results);\n        \n       \n    } else {\n      alert('missing information');\n    }\n  }\n  handleChangeBody = (e) => {\n    const body = e.target.value;\n    this.setState({body});\n  }\n  handleChangeURL = e => {\n    // console.log('hhhgg',e);\n    const url = e.target.value;\n    this.setState({ url });\n  };\n\n  activation = () => {\n    switch (this.state.method) {\n    case 'get':\n      this.setState({ active: false });\n      break;\n    case 'post':\n    case 'put':\n      this.setState({ active: true });\n      break;\n    case 'delete':\n      this.setState({ active: false });\n      break;\n    default:\n      break;\n    }\n\n\n  };\n  handleChangeMethod = e => {\n    const method = e.target.id;\n    this.setState({ method });\n    this.activation();\n  \n  };\n  putPost = async (e) => {\n    let url = this.state.url;\n    let method = this.state.method ;\n    let request = {\n      url: this.state.url,\n      method: this.state.method,\n    };\n    try{\n      const options = {\n        method: this.state.method,\n        body: JSON.stringify(this.state.body),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      //   console.log('oooooooooooooooooooooo',options.body);\n      const data = await fetch(this.state.url, options);\n      const jsonData = await data.json();\n      await this.setState({ url, method,request});\n      \n      this.props.update(jsonData);\n    }catch(err){\n      console.log(err);\n    }\n  }\n\n  deleteHandler = async (e) => {\n    try{\n      const options = {\n        method: this.state.method,\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      const data = await fetch(this.state.url, options);\n      const jsonData = await data.json();\n      this.props.update(jsonData);\n    }catch(err){\n      console.log(err);\n    }\n  }\n  \n  \n \n  render() {\n    return (\n      <section>\n        <form id='form' onSubmit={this.handleSubmit}>\n          <label >\n            <span >URL: </span>\n            <input name='url' id='url' type='text' onChange={this.handleChangeURL} />\n            <button id=\"goButton\" type=\"submit\">GO!</button>\n          </label>\n          <label className=\"methods\">\n            <span className={this.state.method === 'get' ? 'active' : ''} id=\"get\" onClick={this.handleChangeMethod}>GET</span>\n            <span className={this.state.method === 'post' ? 'active' : ''} id=\"post\" onClick={this.handleChangeMethod}>POST</span>\n            <span className={this.state.method === 'put' ? 'active' : ''} id=\"put\" onClick={this.handleChangeMethod}>PUT</span>\n            <span className={this.state.method === 'delete' ? 'active' : ''} id=\"delete\" onClick={this.handleChangeMethod}>DELETE</span>\n          </label>\n        </form>\n        <If condition={this.state.active}>\n          <Then>\n            <div id=\"body\"><textarea  placeholder=\"Raw JSON Body\" defaultValue={this.state.body}  name=\"requestBody\" spellCheck=\"false\" onChange={this.handleChangeBody} ></textarea></div>\n          </Then>\n          <Else>\n            <div id=\"body\"><textarea placeholder=\"Raw JSON Body\" defaultValue={this.state.body}  name=\"requestBody\" spellCheck=\"false\" disabled></textarea></div>\n          </Else>\n        </If>\n        <section className=\"results\">\n          <span className=\"method\">{this.state.method}</span>\n          <span className=\"url\">{this.state.url}</span>\n        </section>\n      </section>\n    );\n  }\n}\n\n\n\n\nexport default Form;\n","import React from 'react';\nimport ReactJson from 'react-json-view';\nimport '../form/form.scss';\n\n\nfunction Results (props){\n  // console.log('ffffffffffffffffffff',props);\n  if (props.response.Headers) {\n    return (\n      <div className={`loading-${props.loading}`}>\n        <div className='container'>\n          <section>\n            <ReactJson  src= {props.response} />\n          </section>\n        </div>\n      </div>\n    );\n  }else return <section></section>;\n}\nexport default Results;","import React from 'react';\nimport '../history/history.scss';\n\nclass History extends React.Component{\n  key = 0;\n  constructor(props){\n    super(props);\n    this.state = {history:[], key:1};\n  }\n\n  componentDidMount(){\n    const history = JSON.parse(localStorage.getItem('history'));\n    console.log(history);\n    this.setState({history});\n  }\n\n\n  render(){\n    return(\n      <ul>\n        {\n          this.state.history.map(query => {\n            console.log('quuuuuuery',query);\n            this.key = this.key + 1;\n            return <li key={this.key}>\n              <section>\n                {query.method}<br/> {query.url}\n              </section>\n             \n            </li>;\n          })\n        }\n      </ul>\n    );\n  }\n\n}\n\nexport default History;","import React from 'react';\nimport './footer.scss';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer>\n          &copy; 2020 Reham Omar ^_^\n      </footer>\n    );    }\n}\n  \nexport default Footer;\n\n\n","import React from 'react';\nimport {Route} from 'react-router-dom';\nimport Header from './component/header/header.js';\nimport Main from './component/form/form.js';\nimport Results from './component/reaults/results.js';\nimport History from './component/history/history.js';\nimport Footer from './component/footer/footer.js';\n\n\n\nclass App extends React.Component{\n  constructor (props){\n    super(props);\n    this.state = {\n      loading: false,\n    };\n  }\n   handleUpdate = (updated) =>{\n     let header=updated.Headers;\n     let response=updated.Response;\n\n     this.setState({Headers:{header}, Response:{response}});\n\n   }\n   toggleLoading = () => {\n     this.setState({ loading: !this.state.loading });\n   }\n   render(){\n     return (\n       <>\n         <Header />\n         <Route exact path='/'>\n           <main>\n             <Main  update={this.handleUpdate} toggleLoading={this.toggleLoading}/>\n             <Results loading={this.state.loading} response={this.state} />\n           </main>\n         </Route>\n         <Route exact path='/history'>\n           <main>\n             <History />\n           </main>\n         </Route>\n        \n\n         <Footer />\n\n       </>\n     );\n   }\n}\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport App from './App.js';\n\nclass Main extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <React.StrictMode>\n          <App />\n        </React.StrictMode>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);"],"sourceRoot":""}